#Spring Application Development Config
server:
  port: 8080

spring:
  application:
      name: "accounts"
  main:
    banner-mode: off

  profiles:
    active: "prod"

  config:
    import: "optional:configserver:http://localhost:8071/"

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    h2:
      console:
        enabled: true
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
      hibernate:
        ddl-auto: update
      show-sql: true

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true


eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

resilience4j.circuitbreaker:
  config:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  config:
    default:
      maxAttempts: 3
      waitDuration: 100
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException

resilience4j.ratelimiter:
  config:
    default:
      limitForPeriod: 1
      limitRefreshPeriod: 5000
      timeoutDuration: 1000


management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: "accounts"

endpoints:
  shutdown:
    enabled: true

info:
  app:
    name: "accounts"
    description: "Easy Bank Accounts Application"
    version: "1.0.0"

logging:
  level:
    com:
      easybanks:
        accounts: DEBUG

  #H2 Database config
#  datasource:
#    url: jdbc:mysql://localhost:3309/accountsdb
#    username: root
#    password: root
#  sql:
#    init:
#      mode: always
#  jpa:
#    show-sql: true





