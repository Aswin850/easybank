server:
  port: 8090

spring:
  application:
   name: loans

  config:
    import: "optional:configserver:http://localhost:8071/"

  profiles:
    active: "prod"

  main:
   banner-mode: off

  cloud:
    function:
      definition: updateCommunication;

    stream:
      bindings:
        loansConformation-out-0:
          destination: loans-conformation

        updateCommunication-in-0:
          destination: loans-conformation-sended
          group: ${spring.application.name}

      kafka:
        binder:
          brokers:
            - localhost:9092

#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
#    connection-timeout: 10s

  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
    h2:
      console:
        enabled: true
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
      hibernate:
        ddl-auto: update
      show-sql: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

endpoints:
  shutdown:
    enabled: true

info:
  app:
    name: "loans"
    description: "Easy Bank Loans Application"
    version: "1.0.0"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: "loans"


logging:
  level:
    com:
      easybank:
        loans: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

#  datasource:
#   url: jdbc:mysql://localhost:3307/loansdb
#   username: root
#   password: root
#  sql:
#    init:
#      mode: always
#
#  jpa:
#    show-sql: true
#    config:
#      import: "optional:configserver:http://localhost:8071/"
